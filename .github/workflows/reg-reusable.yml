name: register & store

# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

on:
  # callable workflow
  workflow_call:
    inputs:
      bg:
        required: true
        type: string
      env:
        required: true
        type: string
      env_name:
        required: true
        type: string
      size:
        required: false
        type: string
        default: "small"
      no: 
        required: false
        type: string
        default: "1"

env:
  # Use docker.io for Docker Hub if empty
  RENEW: false

jobs:
  register:
    runs-on: ubuntu-latest
    

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      # Set up BuildKit Docker container builder to be able to build
      # multi-platform images and export cache
      # https://github.com/docker/setup-buildx-action
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@f95db51fddba0c2d1ec667646a06c2ce06100226 # v3.0.0

      - name: pull image
        run: |
          docker pull mulesoft/flex-gateway:latest

      # list docker images
      - name: list docker images
        run: |
          docker images

      # check os version on ubuntu
      - name: check os version
        run: |
          cat /etc/os-release

      - name: make directory
        run: |
          mkdir -p temp
          mkdir -p renew
          ls -l

      # docker container run [OPTIONS] IMAGE [COMMAND] [ARG...]
      # Aliases: docker run

      # - name: build vars
      #   id: json
      #   run: |
      #     # iterate over config.json keys
      #     for key in $(jq -r 'keys[]' config.json); do
      #       if [[ "$key" == "RegionsBank" ]]; then
      #         echo "key -> $key"
              
      #         client_id=$(jq -r .$key.client_id config.json)
      #         echo "client_id=$client_id"
      #         echo "client_id=$client_id" >> $GITHUB_OUTPUT

      #         client_secret=$(jq -r .$key.client_secret config.json)
      #         echo "client_secret=$client_secret"
      #         echo "client_secret=$client_secret" >> $GITHUB_OUTPUT

      #         org_id=$(jq -r .$key.OrgID config.json)
      #         echo "org_id=$org_id"
      #         echo "org_id=$org_id" >> $GITHUB_OUTPUT

      #         env_id=$(jq -r .$key.EnvID config.json)
      #         echo "env_id=$env_id"
      #         echo "env_id=$env_id" >> $GITHUB_OUTPUT

      #         break
              
      #       fi
      #     done
          

      - name: register
        run: |
          docker run --entrypoint flexctl \
            -v "$(pwd)":/registration \
            -u $UID mulesoft/flex-gateway \
            registration create \
            --client-id=b95726291f564ae2942ac2c4ecc46311 \
            --client-secret=59dB6D7A84bd442bAfE7422233a82902 \
            --environment=2c6f18bb-03e2-4874-a489-7216df5b5bc2 \
            --connected=true \
            --organization=a6ea8ce7-6d5f-41ee-a802-5505e8833854\
            --output-directory=/registration \
            fgw-regionsbank-np-a-small-1

          
          if [ -f registration.yaml ]; then
            cat registration.yaml
          else
            echo "registration.yaml does not exist"
          fi

      - name: list files
        run: |
          ls -l

      - name: wait
        run: |
          sleep 1

      # inspect registration.yaml
      - name: inspection
        run: |
          docker run --entrypoint flexctl \
            -v "$(pwd)":/registration \
            -u $UID mulesoft/flex-gateway \
            registration inspect --file=/registration/registration.yaml > reg-date.json

            jq . reg-date.json

      - name: get expiration date
        run: |
          current_timestamp=$(date +%s)
          echo "current_timestamp -> $current_timestamp

          future_date="$(jq -r '.expiration_date[:19]' reg-date.json)"
          future_timestamp=$(date -d "$future_date" +%s)
          echo "future_timestamp -> $future_timestamp"

          time_diff=$((future_timestamp - current_timestamp))
          echo "time_diff -> $time_diff"

          days=$((time_diff / 86400))
          echo "days -> $days"

      - name: renew
        run: |
          docker run --entrypoint flexctl \
            -v "$(pwd)/renew":/renew \
            -v "$(pwd)":/registration \
            -u $UID mulesoft/flex-gateway \
            registration renew \
            --client-id=b95726291f564ae2942ac2c4ecc46311 \
            --client-secret=59dB6D7A84bd442bAfE7422233a82902 \
            --output-directory=/renew \
            /registration/registration.yaml

          cat renew/registration.yaml
          
                      

      

name: env -> variables

# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

on:
  workflow_dispatch:
  push:
    branches:
      - main

env:
  # Use docker.io for Docker Hub if empty
  RENEW: false
  ID: 1
  NAME: "rashida"
  BG: "blue"
  ENV: "dev"

jobs:
  Variables:
    
    runs-on: ubuntu-latest
    permissions:
      contents: read # read|write|none
      id-token: write # read|write|none
      
    steps:
      - name: Set dynamic variable 1
        run: |
          echo "NAME1=inaaya" >> $GITHUB_ENV
          echo "NAME2=nadeem" >> $GITHUB_ENV
          
      - name: display dynamic variable 1
        run: |
          echo NAME1 --> $NAME1    
          echo NAME2 --> $NAME2
          
      - name: build json file
        
        run: |
      
          echo "{}" > config.json

          echo "$(jq --arg name "$NAME1" --arg env "$ENV" '. += { "obj1":{"name": $name, "id": 1, "env": $env} }' config.json)" > config.json
              
          echo "$(jq --arg name "$NAME2" '. += { "obj2":{"name": $name, "id": 2} }' config.json)" > config.json
          echo "$(jq --arg name "${{ env.NAME }}" '. += { "obj3":{"name": $name, "id": 3} }' config.json)" > config.json
          jq . config.json

          jq .obj2 config.json

          if [[ -z "$(jq .obj21 config.json)" ]]; then
            echo "obj21 does exists"
          else
            echo "obj21 does NOT exist"
          fi


          
          